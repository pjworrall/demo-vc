{"version":3,"sources":["../node_modules/rdflib/node_modules/n3/lib sync /^/.//N3.*$","../node_modules/@trust/webcrypto/src/algorithms sync","pages/Home.tsx","consumer/components/CorroboratingEventForm.tsx","pages/Consumer.tsx","publisher/components/SignCredential.tsx","publisher/components/mockCredential.ts","publisher/components/ExportCredential.tsx","services/sendCredential.ts","pages/Publisher.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyContext","Home","props","className","to","CorroboratingEventForm","state","value","handleChange","bind","handleSubmit","event","this","setState","target","console","log","alert","preventDefault","onSubmit","name","onChange","type","React","Component","Consumer","SignCredential","useState","webId","setWebId","isProcessing","setIsProcessing","useCallback","onSign","buttonClass","htmlFor","disabled","Credential","readOnly","cols","rows","credential","a","fetchUser","user","inbox","getNodeRef","ldp","proposedFilename","Date","now","fetch","body","method","headers","slug","response","ok","get","Publisher","setCredential","sent","setSent","useEffect","sendCredential","cred","then","component","App","basepath","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iLAAA,IAAIA,EAAM,CACT,YAAa,GACb,eAAgB,GAChB,aAAc,GACd,gBAAiB,GACjB,YAAa,IACb,eAAgB,IAChB,mBAAoB,IACpB,sBAAuB,IACvB,mBAAoB,IACpB,sBAAuB,IACvB,WAAY,GACZ,cAAe,GACf,aAAc,IACd,gBAAiB,KAIlB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,kLCnCpB,SAASY,EAAoBb,GAC5B,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEPQ,EAAoBL,KAAO,WAAa,MAAO,IAC/CK,EAAoBH,QAAUG,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBZ,GAAK,K,+FCHZa,EAAwB,SAACC,GACpC,OAAO,oCACL,6BAASC,UAAU,WACjB,yBAAKA,UAAU,WACb,kBAAC,IAAD,CACEC,GAAG,YACHD,UAAU,qBAFZ,aAIA,kBAAC,IAAD,CACEC,GAAG,WACHD,UAAU,UAFZ,gB,qDCXKE,EAAb,YACE,WAAYH,GAAa,IAAD,8BACtB,4CAAMA,KACDI,MAAQ,CACXC,MAAO,IAGT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPE,EAD1B,0EAWeE,GACXC,KAAKC,SAAS,CAACN,MAAOI,EAAMG,OAAOP,UAZvC,mCAeeI,GACXI,QAAQC,IAAI,gBAAkBJ,KAAKN,MAAcC,OACjDU,MAAM,yCACNN,EAAMO,mBAlBV,+BAsBI,OACE,0BAAMC,SAAUP,KAAKF,cACnB,0DAGA,6BACA,mEAGA,6BACA,4BAAQtB,GAAG,UAAUgC,KAAK,WAC1B,4BAAQb,MAAM,IAAd,+BACA,4BAAQA,MAAM,gBAAd,4CACA,4BAAQA,MAAM,oBAAd,8BAEA,6BACA,oDAEE,6BACA,8BAAUA,MAAQK,KAAKN,MAAcC,MAAOc,SAAUT,KAAKJ,gBAE7D,6BACA,2BAAOc,KAAK,SAASf,MAAM,gBA5CnC,GAA4CgB,IAAMC,WCIrCC,EAA4B,SAACvB,GACxC,OAAO,kBAAC,EAAD,O,QCAIwB,EAAkC,SAACxB,GAAW,IAAD,EAC9BqB,IAAMI,SAAS,IADe,mBACjDC,EADiD,KAC1CC,EAD0C,OAEhBN,IAAMI,UAAS,GAFC,mBAEjDG,EAFiD,KAEnCC,EAFmC,KAIlDZ,EAAWI,IAAMS,aAAY,SAACrB,GAClCA,EAAMO,iBAENa,GAAgB,GAChB7B,EAAM+B,OCfiB,8kFDeML,KAC5B,CAAC1B,EAAO0B,IAELM,EAAcJ,EAAe,+BAAiC,oBAEpE,OAAO,oCACL,0BAAMX,SAAUA,GACd,yBAAKhB,UAAU,SACb,2BAAOgC,QAAQ,UAAUhC,UAAU,SAAnC,mBACA,yBAAKA,UAAU,WACb,2BACEmB,KAAK,MACLlC,GAAG,UACHgD,SAAUN,EACVT,SAAU,SAACV,GAAD,OAAWkB,EAASlB,EAAMG,OAAOP,YAIjD,yBAAKJ,UAAU,SACb,yBAAKA,UAAU,WACb,4BAAQmB,KAAK,SAASnB,UAAW+B,GAAjC,aE7BGG,EAA8B,SAACnC,GAC1C,OAAO,oCACL,yBAAKC,UAAU,SACb,2BAAOgC,QAAQ,UAAUhC,UAAU,SAAnC,cACA,yBAAKA,UAAU,WACb,8BACEiB,KAAK,aACLhC,GAAG,aACHkD,UAAU,EACVC,KAAM,GACNC,KAAM,GACNjC,MAAOL,EAAMuC,cAGjB,uBAAGtC,UAAU,QAAb,oEAEF,uBAAGA,UAAU,WAAb,8D,uFCnBG,WAA8BsC,EAAoBb,GAAlD,qBAAAc,EAAA,sEACcC,YAAUf,GADxB,UACCgB,EADD,gDAGI,MAHJ,UAMCC,EAAQD,EAAKE,WAAWC,IAAIF,OAN7B,yCAQI,MARJ,cAWCG,EAAmB,MAAQC,KAAKC,MAXjC,UAYkBC,MAAMN,EAAO,CAClCO,KAAMX,EACNY,OAAQ,OACRC,QAAS,CACP,eAAgB,aAChBC,KAAMP,KAjBL,eAYCQ,EAZD,yBAqBEA,EAASC,GAAKD,EAASF,QAAQI,IAAI,YAAc,MArBnD,6C,sBCKA,IAAMC,EAA6B,SAACzD,GAAW,IAAD,EACfqB,IAAMI,WADS,mBAC5Cc,EAD4C,KAChCmB,EADgC,OAE3BrC,IAAMI,UAAS,GAFY,mBAE5CkC,EAF4C,KAEtCC,EAFsC,KAInDvC,IAAMwC,WAAU,WACTtB,GDVF,SAAP,oCCaIuB,CAAevB,EAAWwB,KAAMxB,EAAWb,OAAOsC,MAAK,kBAAMJ,GAAQ,QACpE,CAACrB,IAEJ,IAAM0B,EAAaN,GAA8B,qBAAfpB,EAC9B,kBAAC,EAAD,CAAYA,WAAYA,EAAWwB,OACnC,kBAAC,EAAD,CAAgBhC,OAAQ,SAACgC,EAAMrC,GAAP,OAAiBgC,EAAc,CAAEK,OAAMrC,aAEnE,OAAO,oCACL,6BAASzB,UAAU,WAChBgE,KCPQC,EAVO,WACpB,OAAO,oCACL,kBAAC,IAAD,CAAQC,SAJ6C,YAKnD,kBAAC,EAAD,CAAMC,KAAK,MACX,kBAAC,EAAD,CAAUA,KAAK,aACf,kBAAC,EAAD,CAAWA,KAAK,iBCDFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhB,MAAK,SAAAiB,GACjCA,EAAaC,kB","file":"static/js/main.0ab56d3d.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 93,\n\t\"./N3Lexer.js\": 93,\n\t\"./N3Parser\": 94,\n\t\"./N3Parser.js\": 94,\n\t\"./N3Store\": 139,\n\t\"./N3Store.js\": 139,\n\t\"./N3StreamParser\": 140,\n\t\"./N3StreamParser.js\": 140,\n\t\"./N3StreamWriter\": 145,\n\t\"./N3StreamWriter.js\": 145,\n\t\"./N3Util\": 95,\n\t\"./N3Util.js\": 95,\n\t\"./N3Writer\": 100,\n\t\"./N3Writer.js\": 100\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 261;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 447;","import React from 'react';\nimport { RouteComponentProps, Link } from '@reach/router';\n\ntype Props = RouteComponentProps;\n\nexport const Home: React.FC<Props> = (props) => {\n  return <>\n    <section className=\"section\">\n      <div className=\"buttons\">\n        <Link\n          to=\"publisher\"\n          className=\"button is-primary\"\n        >Publisher</Link>\n        <Link\n          to=\"consumer\"\n          className=\"button\"\n        >Consumer</Link>\n      </div>\n    </section>\n  </>;\n};\n","import React from \"react\";\n\nexport class CorroboratingEventForm extends React.Component {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event: any) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event: any) {\n    console.log('CE submitted:', (this.state as any).value);\n    alert('Corroborating Event accepted, thanks!');\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>\n          Verify Corroborating Event\n        </h1>\n        <br/>\n        <label>\n          Select Corroborating Event Type:\n        </label>\n        <br/>\n        <select id=\"ce-type\" name=\"ce-type\">\n        <option value=\"\">--Please choose an option--</option>\n        <option value=\"utility-bill\">Physical check of utility bill in branch</option>\n        <option value=\"delivery-receipt\">Receipt of goods delivery</option>\n        </select>\n        <br/>\n        <label>\n          Paste JSON here...\n          <br/>\n          <textarea value={(this.state as any).value} onChange={this.handleChange} />\n        </label>\n        <br/>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { CorroboratingEventForm } from '../consumer/components/CorroboratingEventForm';\n\ntype Props = RouteComponentProps;\n\nexport const Consumer: React.FC<Props> = (props: any) => {\n  return <CorroboratingEventForm/>;\n};\n","import React from 'react';\nimport { mockCredential } from './mockCredential';\n\ninterface Props {\n  onSign: (signedCredential: string, subjectWebId: string) => void;\n};\n\nexport const SignCredential: React.FC<Props> = (props) => {\n  const [webId, setWebId] = React.useState('');\n  const [isProcessing, setIsProcessing] = React.useState(false);\n\n  const onSubmit = React.useCallback((event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsProcessing(true);\n    props.onSign(mockCredential, webId);\n  }, [props, webId]);\n\n  const buttonClass = isProcessing ? 'button is-primary is-loading' : 'button is-primary';\n\n  return <>\n    <form onSubmit={onSubmit}>\n      <div className=\"field\">\n        <label htmlFor=\"subject\" className=\"label\">Subject's WebID</label>\n        <div className=\"control\">\n          <input\n            type=\"url\"\n            id=\"subject\"\n            disabled={isProcessing}\n            onChange={(event) => setWebId(event.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <button type=\"submit\" className={buttonClass}>Sign</button>\n        </div>\n      </div>\n    </form>\n  </>;\n};\n","export const mockCredential = `\n{\n  \"@id\": \"https://demo-vc-2.inrupt.net/profile/card#cred\",\n  \"http://dig.csail.mit.edu/2018/svc#description\": [\n      {\n          \"@value\": \"Congratulations! By the powers vested in me as Issuer with ID 'https://michielbdejong.inrupt.net/profile/card#me', I hereby grant Subject with ID 'https://demo-vc-2.inrupt.net/profile/card#me' a credential of type GENERAL\"\n      }\n  ],\n  \"http://dig.csail.mit.edu/2018/svc#domain\": [\n      {\n          \"@value\": \"GENERAL\"\n      },\n      {\n          \"@value\": \"some domain\"\n      }\n  ],\n  \"http://dig.csail.mit.edu/2018/svc#id\": [\n      {\n          \"@value\": \"1234567\"\n      },\n      {\n          \"@value\": \"undefined338114686478150\"\n      }\n  ],\n  \"http://dig.csail.mit.edu/2018/svc#issuerId\": [\n      {\n          \"@value\": \"https://michielbdejong.inrupt.net/profile/card#me\"\n      },\n      {\n          \"@id\": \"https://demo-vc-2.inrupt.net/profile/card#me\"\n      }\n  ],\n  \"http://dig.csail.mit.edu/2018/svc#messageType\": [\n      {\n          \"@value\": \"ISSUANCE\"\n      }\n  ],\n  \"http://dig.csail.mit.edu/2018/svc#subjectId\": [\n      {\n          \"@value\": \"https://demo-vc-2.inrupt.net/profile/card#me\"\n      },\n      {\n          \"@id\": \"https://demo-vc-2.inrupt.net/profile/card#me\"\n      }\n  ],\n  \"http://dig.csail.mit.edu/2018/svc#title\": [\n      {\n          \"@value\": \"GENERAL Credential for Subject with ID 'https://demo-vc-2.inrupt.net/profile/card#me'\"\n      },\n      {\n          \"@value\": \"testing this\"\n      }\n  ],\n  \"@type\": [\n      \"http://dig.csail.mit.edu/2018/svc#Credential\"\n  ],\n  \"https://w3id.org/credentials/v1#credentialStatus\": [\n      {\n          \"@value\": \"undefined338114686478150.n3\"\n      }\n  ],\n  \"https://w3id.org/security#proof\": {\n      \"@graph\": {\n          \"@type\": \"https://w3id.org/security#RsaSignature2018\",\n          \"http://purl.org/dc/terms/created\": {\n              \"@type\": \"http://www.w3.org/2001/XMLSchema#dateTime\",\n              \"@value\": \"2019-09-23T12:40:01Z\"\n          },\n          \"https://w3id.org/security#jws\": \"eyJhbGciOiJQUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Y2tijVRkOBQQ87dlkRl5_bfTIiwgdMQVyT5rpMOM2iYinBxKtX-YGATXM2H7LkmYP6QJIWPwKKCelWyMhlqN2Hobq8WKDkSl3fk5KBVL8Wrq9zG02XcJa90eKG5kWr-FD00pNBTP3v6DtfDyxN8sBXqsXtDL_ErbznMVMEvOP7t7D0fIQiP5sD2qFPi576vhKqD4I-81sQ6otkwTT4VpiIhUTmTrburAi07HrH6pG8U1AeHBeSw4rVQVYggRiCPE4NR4MV2DvNMBEWiJMPhD88Tu2Osl_iy8qVNLJhjSFiXLyCh3oFYV8yYFpO_Ls5iyXWs7Fgp4lQ8wSlDIx5M9fQ\",\n          \"https://w3id.org/security#proofPurpose\": {\n              \"@id\": \"https://w3id.org/security#assertionMethod\"\n          }\n      }\n  }\n}\n`;","import React from 'react';\n\ninterface Props {\n  credential: string;\n};\n\nexport const Credential: React.FC<Props> = (props) => {\n  return <>\n    <div className=\"field\">\n      <label htmlFor=\"subject\" className=\"label\">Credential</label>\n      <div className=\"control\">\n        <textarea\n          name=\"credential\"\n          id=\"credential\"\n          readOnly={true}\n          cols={30}\n          rows={10}\n          value={props.credential}\n        />\n      </div>\n      <p className=\"help\">The above code snippet is proof that you provided a credential.</p>\n    </div>\n    <p className=\"content\">This proof has also been sent to the credential subject.</p>\n  </>;\n};\n","import { fetchUser } from 'tripledoc-solid-helpers';\nimport { ldp } from 'rdf-namespaces';\n\nexport async function sendCredential(credential: string, webId: string): Promise<null | string> {\n  const user = await fetchUser(webId);\n  if (!user) {\n    return null;\n  }\n\n  const inbox = user.getNodeRef(ldp.inbox)\n  if (!inbox) {\n    return null;\n  }\n\n  const proposedFilename = 'ce_' + Date.now();\n  const response = await fetch(inbox, {\n    body: credential,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'text/plain',\n      slug: proposedFilename,\n    },\n  });\n\n  return response.ok ? response.headers.get('Location') : null;\n}","import React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { SignCredential } from '../publisher/components/SignCredential';\nimport { Credential } from '../publisher/components/ExportCredential';\nimport { sendCredential } from '../services/sendCredential';\n\ntype Props = RouteComponentProps;\n\nexport const Publisher: React.FC<Props> = (props) => {\n  const [credential, setCredential] = React.useState<{ cred: string; webId: string; }>();\n  const [sent, setSent] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!credential) {\n      return;\n    }\n    sendCredential(credential.cred, credential.webId).then(() => setSent(true));\n  }, [credential]);\n\n  const component = (sent && typeof credential !== 'undefined')\n    ? <Credential credential={credential.cred}/>\n    : <SignCredential onSign={(cred, webId) => setCredential({ cred, webId })}/>;\n\n  return <>\n    <section className=\"section\">\n      {component}\n    </section>\n  </>;\n};\n","import React from 'react';\nimport { Router } from '@reach/router';\nimport { Home } from './pages/Home';\nimport { Consumer } from './pages/Consumer';\nimport { Publisher } from './pages/Publisher';\n\nconst basepath = process.env.NODE_ENV === 'production' ? '/demo-vc' : '';\n\nconst App: React.FC = () => {\n  return <>\n    <Router basepath={basepath}>\n      <Home path=\"/\"/>\n      <Consumer path=\"consumer\"/>\n      <Publisher path=\"publisher\"/>\n    </Router>\n  </>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}